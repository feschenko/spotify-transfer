import requests
import json


class Spotify:
    def __init__(self):
        self.client_id = '60ab727bb2aa41789e64252994f20ffa'
        self.token = ''
        self.playlist_id = ''

    def make_response(self, method, url, body=None):
        response = requests.request(method, url=url, data=body,
                                    headers={"Content-Type": "application/json",
                                             "Authorization": f"Bearer {self.token}"})
        return response

    def generate_url(self):
        url = 'https://accounts.spotify.com/authorize'
        return f'{url}?client_id={self.client_id}&response_type=token&redirect_uri=http://localhost:5555/spotify/callback&scope=user-read-private%20playlist-modify-public%20playlist-modify-private&state=34fFs29kd09'

    def get_user_id(self):
        response = self.make_response('get', 'https://api.spotify.com/v1/me')
        try:
            return json.loads(response.text)['id']
        except:
            return json.loads(response.text)['error']['message']

    def generate_playlist(self):
        url = f"https://api.spotify.com/v1/users/{self.get_user_id()}/playlists"

        body = json.dumps({
            "name": "Songs from Vkontakte",
            "description": f"Playlist generated by SpotiTransfer. Contains songs from Vkontakte.",
            "public": False
        })
        response = self.make_response('post', url, body)
        playlist_url = response.json()
        self.playlist_id = playlist_url['id']
        return playlist_url['external_urls']['spotify']

    def add_tracks(self, tracks: list):
        url = f'https://api.spotify.com/v1/playlists/{self.playlist_id}/tracks'
        body = json.dumps({
            "uris": tracks,
            "position": 0
        })
        response = self.make_response('post', url, body)
        return response.json()

    def search_tracks(self, keyword: list):
        tracks = []
        for i in keyword:
            url = f'https://api.spotify.com/v1/search?q={i.replace(" ", "%20")}&type=track'
            response = self.make_response('get', url)
            try:
                tracks.append(f"spotify:track:{response.json()['tracks']['items'][0]['id']}")
            except:
                pass
        return tracks


class Vkontakte:
    def __init__(self):
        self.access_token, self.uid, = '', ''

    def make_response(self, method, url):
        response = requests.request(method, url=url,
                                    headers={"Content-Type": "application/json"})
        return response

    def generate_url(self):
        auth_url = f'https://oauth.vk.com/authorize?client_id=6146827&scope=1073737727&redirect_uri=https://oauth.vk' \
                   f'.com/blank.html&display=page&response_type=token&revoke=1 '
        return auth_url

    def get_tracks(self):
        url = f'https://api.vk.com/method/audio.get.json?uid={self.uid}&access_token={self.access_token}&v=5.92'
        page = self.make_response('get', url).text
        response = json.loads(page)['response']
        items = response['items']
        tracks = []
        for track_number in range(response['count']):
            tracks.append(f"{items[track_number]['artist']} {items[track_number]['title']}")
        return tracks
